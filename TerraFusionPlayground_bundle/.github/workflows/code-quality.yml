name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  linting:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - run: npm ci
      - name: ESLint
        run: npm run lint
      - name: Prettier
        run: npm run format:check

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - run: npm ci
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Run CodeQL
        uses: github/codeql-action/analyze@v2
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'TerraFusion Playground'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --suppression suppression.xml
            --failOnCVSS 7
            --enableRetired
      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-report
          path: reports
          retention-days: 30

  performance:
    name: Performance Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - run: npm ci
      - name: Run Performance Tests
        run: npm run test:performance
        env:
          NODE_ENV: test
      - name: Upload Performance Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-report
          path: reports/performance
          retention-days: 30

  bundle:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - run: npm ci
      - name: Build and Analyze
        run: |
          npm run build
          npm run analyze
      - name: Upload Bundle Analysis
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bundle-analysis
          path: reports/bundle
          retention-days: 30

  notify:
    name: Notification
    needs: [linting, security, performance, bundle]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 