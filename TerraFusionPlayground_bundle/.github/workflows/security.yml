name: Security Scanning

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'TerraFusion Playground'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --suppression suppression.xml
          --failOnCVSS 7
          --enableRetired

    - name: Upload dependency check report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-check-report
        path: reports
        retention-days: 30

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Run SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run container scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/terrafusion-playground:latest
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Run SAST scan
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Run SAST analysis
      uses: github/codeql-action/analyze@v2

    - name: Run DAST scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: 'http://localhost:3000'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'

    - name: Upload DAST report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dast-report
        path: zap-report.html
        retention-days: 30

    - name: Run IAST scan
      uses: contrast-security/contrast-action@v1
      with:
        api_key: ${{ secrets.CONTRAST_API_KEY }}
        service_key: ${{ secrets.CONTRAST_SERVICE_KEY }}
        application_name: 'TerraFusion Playground'
        application_language: 'nodejs'
        application_framework: 'express'

    - name: Generate security report
      run: |
        npm run generate:security-report
      env:
        NODE_ENV: test

    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: reports/security
        retention-days: 30

    - name: Create security issue
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('reports/security/summary.json', 'utf8'));
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Security Vulnerability Detected',
            body: `## Security Scan Results\n\n${report.summary}\n\n### Details\n\n${report.details}`,
            labels: ['security', 'needs-review']
          });

    - name: Notify on failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 